---
openapi: 3.0.0
info:
  title: TripPlanner API
  description: API for the TripPlanner App
  version: 1.0.0
paths:
  /signup:
    post:
      summary: /signup
      description: Returns a JWT token with a valid user
      operationId: getToken
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        "404":
          description: User not found
  /places:
    get:
      summary: /places
      description: Returns list of all the places
      operationId: getPlaces
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Place"
        "404":
          description: Place not found
  /places/{placeId}:
    get:
      summary: /places/{placeId}
      description: Returns a single place
      operationId: getPlaceById
      parameters:
        - name: placeId
          in: path
          description: ID of place to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Places"
        "404":
          description: Place not found
  /places/{placeId}/reviews:
    get:
      summary: /places/{placeId}/reviews
      description: Returns list of reviews for the place
      operationId: getReviews
      parameters:
        - name: placeId
          in: path
          description: ID of place
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Places"
        "404":
          description: Place not found
  /reviews/{reviewId}:
    get:
      summary: /reviews/{reviewId}
      description: Returns a single review
      operationId: getReviewById
      parameters:
        - name: reviewId
          in: path
          description: ID of review to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
        "404":
          description: Review not found
    delete:
      summary: /reviews/{reviewId}
      description: Remove the review by id
      operationId: removeReview
      parameters:
        - name: reviewId
          in: path
          description: ID of review to remove
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
        "401":
          description: Access Denied
      security:
        - bearerAuth: []
  /reviews/create:
    post:
      summary: /reviews/create
      description: Create a review and return the new id
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Review"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
        "401":
          description: Access Denied
      security:
        - bearerAuth: []
components:
  schemas:
    Review:
      type: object
      properties:
        placeId:
          type: string
        userId:
          type: string
        title:
          type: string
        description:
          type: string
    Token:
      type: object
      properties:
        token:
          type: string
    Places:
      type: array
      items:
        $ref: "#/components/schemas/Place"
    Place:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Pizzeria mamma mia
        photoUrls:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        status:
          type: string
          description: place status
          enum:
            - open
            - closed
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
